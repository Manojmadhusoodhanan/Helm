apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helloworld.fullname" . }}
  labels:
    {{- include "helloworld.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helloworld.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helloworld.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: app-logs
          hostPath:
            path: /var/log/
            type: Directory
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            failureThreshold: {{ .Values.service.healthCheck.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.service.healthCheck.readinessProbe.path }}
              port: {{ .Values.service.port }}
              scheme: {{ .Values.service.healthCheck.scheme }}
            initialDelaySeconds: {{ .Values.service.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.healthCheck.readinessProbe.periodSeconds }}
            successThreshold: 1
            timeoutSeconds: {{ .Values.service.healthCheck.timeoutSeconds }}
          livenessProbe:
            failureThreshold: {{ .Values.service.healthCheck.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.service.healthCheck.livenessProbe.path }}
              port: {{ .Values.service.port }}
              scheme: {{ .Values.service.healthCheck.scheme }}
            initialDelaySeconds: {{ .Values.service.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.healthCheck.livenessProbe.periodSeconds }}
            successThreshold: 1
            timeoutSeconds: {{ .Values.service.healthCheck.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs/
          env:
           - name: SERVER_NAME
             value: {{ .Values.serverName | quote }}
           - name: ENVIRONMENT
             value: {{ .Values.service.environment | quote }}
      imagePullSecrets:
          - name: {{ .Values.imagePullSecrets }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
